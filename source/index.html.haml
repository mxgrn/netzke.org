- @title = "Overview"
.about-netzke
  .container
    %h1 NETZKE
    %h2 Modular GUI development for Web
    %h3 Client-server components with Sencha Ext JS and Ruby on Rails
    %p
      %a.btn.btn-primary.btn-lg{:type => "button", href: "https://www.airpair.com/javascript/posts/getting-started-with-netzke"}
        Start here
.container
  .row
    .col-md-8
      %blockquote
        %em I like your [Netzke] concept. If I were to develop a webapp like that, I would use your framework.
        .pull-right
          %p
          %em Matz, creator of the Ruby language, RubyConf Taiwan, 2012
      %p Netzke is a framework that allows for a beautiful blend of client- and server-side code (JavaScript and Ruby, respectively) into ready-to-use GUI components. It's most useful for creating complex data-rich backend applications with Ruby on Rails on the back end, and Sencha Ext JS in the browser.
      %h4 reusability
      %p Write a component once - and use it throughout your applications.
      %h4 composability
      %p Build new components by combining existing components.
      %h4 testability
      %p Testing each component individually makes it much easier to isolate bugs.
      %h4 extensibility
      %p A Netzke component is a Ruby class represented by an Ext JS component in the browser, and can be easily extended by using object-oriented techniques.
      %h4 encapsulation
      %p You (or your fellow developers) barely need to write any JavaScript in order to use existing components.
      %em Having these at your disposal, you can quickly build amazingly complex RIA without turning your code into a mess.
    = partial 'section'
