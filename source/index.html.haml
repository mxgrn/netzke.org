- @title = "Overview"
.about-netzke
  .container
    %h1
      %img.center-block{src: "/images/full-logo.png"}
    %h2 Client-server components for Web
    %h3 Powered by Sencha Ext JS and Ruby on Rails
    %p
      %a.btn.btn-primary.btn-lg{:type => "button", href: "https://www.airpair.com/javascript/posts/getting-started-with-netzke"}
        Start here
.container
  .row
    .col-md-8
      .center-quote
        %em
          %img.quote-icon{src: "/images/quote.png"}
          I like your [Netzke] concept. If I were to develop a webapp like that, I would use your framework.
        %p
          .pull-right Matz, creator of the Ruby language, RubyConf Taiwan, 2012
      %h4 What is Netzke
      %p Netzke is a framework that allows for a beautiful blend of client- and server-side code (JavaScript and Ruby, respectively) into UI components. It's most useful for creating complex data-rich backend applications with Ruby on Rails on the back end, and Sencha Ext JS in the browser.
      %h4 Reusability
      %p Write a component once - and use it throughout your applications.
      %h4 Composability
      %p Build new components by combining existing components.
      %h4 Testability
      %p Testing each component individually makes it much easier to isolate bugs.
      %h4 Extensibility
      %p A Netzke component is a Ruby class represented by an Ext JS component in the browser, and can be easily extended by using object-oriented techniques.
      %h4 Encapsulation
      %p You (or your fellow developers) barely need to write any JavaScript in order to use existing components.
      %em.center-quote Having these at your disposal, you can quickly build amazingly complex RIA without turning your code into mess.
    = partial 'section'
