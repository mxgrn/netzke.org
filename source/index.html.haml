- @title = "Overview"
.about-netzke
  .container
    %h1
      %img.center-block{src: "/images/full-logo.png"}
    %h2 Client-server components for Web
    %h3 Build ERP webapps with minimal effort
    %h4
      %em Powered by Sencha Ext JS and Ruby on Rails
    %p
      %a.btn.btn-primary.btn-lg{:type => "button", href: "https://youtu.be/7MilmNV4I3U", "data-toggle" => "lightbox", "data-title" => "Netzke app in 4 minutes"}
        Watch a 4-minute tutorial
.container
  .row
    .col-md-8
      .row
        .col-sm-2.text-center
          %img{src: "/images/matz.png"}
        .col-sm-10
          .center-quote
            %em
              "I like your [Netzke] concept. If I had to develop a webapp like that, I would use your framework.
            %p.text-muted
              \- Matz, creator of the Ruby language, at RubyConf Taiwan
      %h2 What is Netzke
      %p Netzke is a framework that allows for a beautiful blend of client- and server-side code (JavaScript and Ruby, respectively) into UI components. It's most useful for creating complex data-rich backend applications with Ruby on Rails on the back end, and Sencha Ext JS in the browser.
      %h3 Reusability
      %p Write a component once - and use it throughout your applications.
      %h3 Composability
      %p Build new components by combining existing components.
      %h3 Testability
      %p Testing each component individually makes it much easier to isolate bugs.
      %h3 Extensibility
      %p A Netzke component is a Ruby class represented by an Ext JS component in the browser, and can be easily extended by using object-oriented techniques.
      %h3 Encapsulation
      %p You (or your fellow developers) barely need to write any JavaScript in order to use existing components.
      .center-quote Having these at your disposal, you can quickly build amazingly complex apps without turning your code into a mess.
    = partial 'section'
